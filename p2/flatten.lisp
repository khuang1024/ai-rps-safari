(defun flatten-current-play (curplay)
  (if curplay
    (let ((rn 0) (pn 0) (sn 0))
      (dotimes (x (length curplay))
        (print "asdadsads")
        (case (second (nth x curplay))
          (r (setq rn (+ rn (first (nth x curplay)))))
          (p (setq pn (+ pn (first (nth x curplay)))))
          (s (setq sn (+ sn (first (nth x curplay)))))))
      (print rn)
      (print pn)
      (print sn)
      (list rn pn sn))))

(setf x1 '(1 R))
(setf x2 '(1 R))
(setf x3 '(1 P))
(setf x4 '(1 S))
(setf x5 '(1 R))

(setf x nil)
(push x1 x)
(push x2 x)
(push x3 x)
(push x4 x)
(push x5 x)
(flatten-current-play x)
